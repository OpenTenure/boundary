<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"   
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:uc="http://xmlns.jcp.org/jsf/composite/uc"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:c="http://xmlns.jcp.org/jsp/jstl/core">
    <h:body>
        <ui:composition template="../templates/EmptyTemplate.xhtml">
            <ui:define name="title">
                #{boundaryPageBean.header}
            </ui:define>
            <ui:define name="head">
                <link type="text/css" rel="stylesheet" href="#{request.contextPath}/css/ol4/ol.css" />
                <script type="text/javascript" src="#{request.contextPath}/js/ol4/ol.js"></script>
                <script type="text/javascript" src="#{request.contextPath}/js/proj4.js"></script>
                <script type="text/javascript" src="#{request.contextPath}/js/ot_boundary_print.js"></script>
                
                <style>
                    body{
                        background-color: #fff !important;
                        margin: 0px !important;
                    }

                    .mapHeader{
                        text-align: center;
                        background-color: #0066cc;
                        margin-bottom: 10px;
                    }
                    
                    .mapHeaderLabel{
                        padding: 5px;
                        font-weight: bold;
                        font-size: 20pt;
                        color: #fff !important;
                    }

                    .mapDiv{
                        width: 18cm;
                        height: 10cm;
                        border: #888 solid 2px;
                        margin: 0 auto !important;
                    }

                    .print-button{
                        position: fixed;
                        top: 7px;
                        left: 35px;
                        z-index: 1000;
                    }
                    
                    .legendBlock {
                        background-color: #BEE8FF;
                        border: 2px solid #000;
                        padding: 5px;
                    }
                    
                    table.coordsTable {
                        border-collapse: collapse;
                        width: 100%;
                    }
                    
                    table.coordsTable thead td {
                        font-weight: bold;
                        background-color: #6C96CD;
                        color: #fff !important;
                    }
                    
                    table.coordsTable thead td {
                        border: 1px solid #000;
                    }
                    
                    table.coordsTable, table.coordsTable tbody td {
                        border: 1px solid black;
                    }
                    
                    table.coordsTable th, table.coordsTable td {
                        padding: 1px;
                        text-align: left;
                    }
                    
                    table.coordsTable tr:nth-child(even) {
                        background-color: #BEE8FF;
                    }
                    
                    table.coordsTable tr:nth-child(odd) {
                        background-color: #EEF8FF;
                    }
                    
                    .circle {
                        background: #000;
                        border: 2px solid #fff;
                        width: 15px;
                        height: 15px;
                        border-radius: 50%;
                        float:left;
                        margin-right: 5px;
                    }
                    
                    .boundary {
                        border: 3px solid #FF5500;
                        width: 30px;
                        height: 15px;
                        float: left;
                        margin-right: 5px;
                        margin-left: 15px;
                    }
                    
                    #scaleBarLabelsTable {
                        margin-left: auto;
                        margin-right: auto;
                        margin-top: 7px;
                    } 
                    
                    #scaleBarTable {
                        margin: 0 auto;
                    } 
                    
                    #scaleBarLabelsTable tr td{
                        width: 1cm !important;
                    }
                    
                    #scaleBarTable tr td{
                        border: 1px solid #000;
                        height: 10px;
                        font-size: 1px;
                        width: 1cm !important;
                        background-color: #000;
                    }
                    
                    #scaleBarTable tr td:nth-child(even){
                        background-color: #fff;
                    }
                    
                    .gridCoord {
                        position: absolute; 
                        background-color: #000; 
                        font-size: 1px;
                    }
                    
                    .gridCoordLabel {
                        position: absolute; 
                    }
                    
                    .gridCoordLabelRight {
                        writing-mode: tb-rl;
                    }
                </style>
                
                <script>
                    sourceCrs = "EPSG:4326";
                    destCrs = "EPSG:3857";
                    var printCrs = sourceCrs;
                    var printProj4 = "#{mapSettingsBean.mapPrintProj4}";
                    
                    prepareProjection();
                    
                    function printMap() {
                        $("#btnPrint").hide();
                        print();
                        $("#btnPrint").show();
                        return false;
                    }

                    $(function () {
                        $('#mapParamsDialog').modal('show');
                    });

                    function renderMap() {
                        $('#mapParamsDialog').modal('hide');

                        // Set map height and width
                        northImage = "#{resource['default:images/north_a4.png']}";
                        paperSize = $("#paperSize").val();
                        orientation = $('input[name=orientation]:checked').val();

                        if (paperSize === "a3") {
                            width = 26.2;
                            height = 38.5;
                            scaleMultiplier = 1;
                            northImage = "#{resource['default:images/north_a3.png']}";
                        } else if (paperSize === "a2") {
                            width = 38.5;
                            height = 55.9;
                            scaleMultiplier = 2;
                            northImage = "#{resource['default:images/north_a2.png']}";
                        } else if (paperSize === "a1") {
                            width = 55.9;
                            height = 80.6;
                            scaleMultiplier = 3;
                            northImage = "#{resource['default:images/north_a1.png']}";
                        } else if (paperSize === "a0") {
                            width = 80.6;
                            height = 115.4;
                            scaleMultiplier = 4;
                            northImage = "#{resource['default:images/north_a0.png']}";
                        }

                        if (orientation === "landscape") {
                            var tmpHeight = height;
                            height = width;
                            width = tmpHeight;
                            var tmpHSteps = hSteps;
                            hSteps = vSteps;
                            vSteps = tmpHSteps;
                        }

                        prepareMapDefaults();

                        layers = [];
                        wkt = new ol.format.WKT();
                        
                        // Add WMS layers
                        $(':checkbox:checked').each(function () {
                            if (this.value === "bingAreal") {
                                layers.push(new ol.layer.Tile({
                                    visible: true,
                                    preload: Infinity,
                                    source: new ol.source.BingMaps({
                                        key: 'Aln9vuwvZ5OXaB7LaPhpy4Z3DyMEKTzIMxJG07aYluJNdMQukZZhFIA5Dllousf-',
                                        imagerySet: 'Aerial'
                                    })
                                }));
                            } 
                            
                            // Add WMS layers
                            <ui:repeat var = "l" value = "#{mapSettingsBean.layersArray}" varStatus = "r">
                                <ui:fragment rendered = "#{l.typeCode eq 'wms' and l.useForOpenTenure}">
                                    if (this.value === "#{l.id}") {
                                        layers.push(new ol.layer.Tile({
                                            source: new ol.source.TileWMS({
                                                url: '#{l.url}',
                                                params: {'LAYERS': '#{l.wmsLayers}', 'TILED': true},
                                                serverType: 'geoserver'
                                            })
                                        }));
                                    }
                                </ui:fragment>
                            </ui:repeat>
                        
                            // Add community area
                            if (this.value === "comarea") {
                                var commAreaFeature = wkt.readFeature(
                                    "#{mapSettingsBean.communityArea}",
                                    {dataProjection: sourceCrs, featureProjection: destCrs}
                                    );

                                var commAreaStyle = new ol.style.Style({
                                    stroke: new ol.style.Stroke({
                                        color: '#F5856F',
                                        width: 3
                                    }),
                                    fill: new ol.style.Fill({
                                        color: 'rgba(255,255,255,0)'
                                    })
                                });

                                layers.push(new ol.layer.Vector({
                                    source: new ol.source.Vector({
                                        features: [commAreaFeature]
                                    }),
                                    style: commAreaStyle
                                }));
                            }
                        });

                        // Add boundary
                        <c:if test = "#{not empty boundaryPageBean.boundary.geom}">
                            currentBoundaryFeature = wkt.readFeature(
                                "#{boundaryPageBean.boundary.geom}",
                                {dataProjection: sourceCrs, featureProjection: destCrs}
                            );
                            currentBoundaryFeature.setProperties({
                                name: "#{boundaryPageBean.boundary.name}"
                            });
                            
                            var initialZoomBounds = currentBoundaryFeature.getGeometry().getExtent();
                            
                            addPoints();
                            
                        </c:if>
                        
                        map = new ol.Map({
                            layers: layers,
                            loadTilesWhileInteracting: true,
                            target: 'map',
                            controls: [],
                            interactions: ol.interaction.defaults({
                                doubleClickZoom: false,
                                dragAndDrop: false,
                                keyboardPan: false,
                                dragPan: false,
                                keyboardZoom: false,
                                mouseWheelZoom: false,
                                pointer: false,
                                select: false
                            })
                        });
                        
                        if(initialZoomBounds){
                            map.getView().fit(initialZoomBounds, map.getSize());
                        }
                        
                        drawScaleAndGrid();
                    }
                </script>
            </ui:define>
            
            <ui:define name="content">
                <div>
                    <a href="#" id="btnPrint" onclick="return printMap()" class="btn btn-primary print-button">
                        <i class="glyphicon glyphicon-print"></i> #{msg.BOUNDARY_PRINT_PAGE_PRINT_WHEN_READY}
                    </a>
                    <div class="mapHeader" style="display: none;">
                        <span class="mapHeaderLabel">#{boundaryPageBean.header}<br /> #{msg.MAP_CONTROL_AREA} = </span>
                    </div>
                    <div id="mapContainer" style="float:left; margin: 0px auto !important; position: relative; display: none;">
                        <img id="imgNorth" style="position: absolute;z-index: 100000;" />
                        <div id="hTopCoords" style="position: relative;clear: both;"></div>
                        <div id="vLeftCoords" style="margin: 0px;float: left;position: relative;"></div>
                        <div id="map" class="mapDiv" style="margin: 0px;float: left;"></div>
                        <div id="vRightCoords" style="margin: 0px;float: left;position: relative;"></div>
                        <div id="hBottomCoords" style="position: relative; clear: both;"></div>
                    </div>
                    <div id="legend" style="float:left; display: none;padding-left: 10px;display: none;">
                        <div class="legendBlock">
                            #{boundaryPageBean.boundaryPrintLocationDescription}
                            <p></p>
                            #{msg.BOUNDARY_PRINT_PAGE_BOUNDARY_COLOR}
                            <p></p>
                            <div class="smallText">
                                <h:outputText escape="false" value="#{boundaryPageBean.boundaryPrintCrsDescription}"></h:outputText>
                                <p></p>
                                <div style="text-align: center;">
                                    <b>Scale <span id="lblScale"></span></b>
                                    <table id="scaleBarLabelsTable">
                                        <tr>
                                            <td><span id="lblScale1"></span></td><td><span id="lblScale2"></span></td>
                                            <td><span id="lblScale3"></span></td><td><span id="lblScale4"></span></td>
                                            <td><span id="lblScale5"></span></td>
                                        </tr>
                                    </table>
                                    <table id="scaleBarTable">
                                        <tr>
                                            <td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>
                                        </tr>
                                    </table>
                                    <span id="lblScaleUnits"></span>
                                </div>
                                <p></p>
                                <div class="circle"></div> <span style="float: left;">#{msg.BOUNDARY_PRINT_PAGE_BEACON}</span>
                                <div class="boundary"></div> <span style="float: left;">#{msg.BOUNDARY_PRINT_PAGE_BOUNDARY}</span>
                                <br />
                            </div>
                        </div>
                        <div class="legendBlock" style="margin-top: 7px;">
                            <table class="coordsTable" id="tableCoords">
                                <thead>
                                    <tr>
                                        <td>
                                            #{msg.BOUNDARY_PRINT_PAGE_BEACON} #
                                        </td>
                                        <td>
                                            #{msg.BOUNDARY_PRINT_PAGE_X}
                                        </td>
                                        <td>
                                            #{msg.BOUNDARY_PRINT_PAGE_Y}
                                        </td>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                            <p></p>
                            <div class="smallText">
                                #{boundaryPageBean.boundaryPrintProducedBy}. <b>#{boundaryPageBean.monthAndYear}</b>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="modal fade" id="mapParamsDialog" tabindex="-1" role="dialog" aria-hidden="true" aria-labelledby="myModalLabel">
                    <div class="modal-dialog" style="width:500px;">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h4 class="modal-title" id="myModalLabel">#{msg.BOUNDARY_PRINT_PAGE_MAP_PARAMS}</h4>
                            </div>
                            <div class="modal-body">
                                <div class="row">
                                    <div class="col-md-6">
                                        <label>#{msg.MAP_CONTROL_LAYERS}:</label>
                                        <br />
                                        <c:if test="#{not mapSettingsBean.isOffline}">
                                            <input type="checkbox" value="bingAreal" checked = "checked" /> #{msg.MAP_CONTROL_BING_AREAL}
                                            <br />
                                        </c:if>
                                        <ui:repeat var = "l" value = "#{mapSettingsBean.layersArray}" varStatus = "r">
                                            <ui:fragment rendered = "#{l.typeCode eq 'wms' and l.useForOpenTenure}">
                                                <input type="checkbox" value="#{l.id}" /> #{l.title}
                                                <br />
                                            </ui:fragment>
                                        </ui:repeat>
                                        <input type="checkbox" value="comarea" /> #{msg.MAP_CONTROL_COMMUNITY_LAYER_NAME}
                                        <br />
                                    </div>
                                    <div class="col-md-6">
                                        <label>#{msg.BOUNDARY_PRINT_PAGE_PAPER_SIZE}:</label>
                                        <br />
                                        <select id="paperSize" style="width: 100px;">
                                            <option value="a4">A4</option>
                                            <option value="a3">A3</option>
                                            <option value="a2">A2</option>
                                            <option value="a1">A1</option>
                                            <option value="a0" selected="selected">A0</option>
                                        </select>
                                        <br /><br />
                                        <label>#{msg.BOUNDARY_PRINT_PAGE_ORIENTATION}</label>
                                        <br />
                                        <input type="radio" name="orientation" value="portrait" /> #{msg.BOUNDARY_PRINT_PAGE_PORTRAIT}
                                        <br />
                                        <input type="radio" name="orientation" value="landscape" checked = "checked" /> #{msg.BOUNDARY_PRINT_PAGE_LANDSCAPE}
                                    </div>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-primary" onclick="renderMap()">#{msg.GENERAL_LABEL_OK}</button>
                            </div>
                        </div>
                    </div>
                </div>
            </ui:define>
        </ui:composition>
    </h:body>
</html>

